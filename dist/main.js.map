{"version":3,"file":"main.js","sources":["../src/main.js","../src/typescript.js"],"sourcesContent":["import { CompositeDisposable } from \"atom\";\nimport {setupTypeScript} from \"./typescript.js\";\n\nlet subscriptions;\n\n/**\n * called by Atom when activating an extension\n * @param  {any} state the current state of atom\n */\nexport function activate(state) {\n  // Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable\n  subscriptions = new CompositeDisposable();\n\n  package_deps().then(() => {\n    setupTypeScript()\n  });\n}\n\n/**\n * install Atom package dependencies if not already loaded\n */\nasync function package_deps() {\n  // Add entries from package-deps here manually\n  // (to prevent loading atom-package-deps and package.json when the deps are already loaded)\n  const deps =  [\n    \"atom-ide-base\",\n    \"atom-typescript\",\n    \"linter-eslint\",\n    \"autocomplete-paths\"\n  ];\n  if (deps.some((p) => !atom.packages.isPackageLoaded(p))) {\n    await import(\"atom-package-deps\").then((atom_package_deps) => {\n      // install if not installed\n      atom_package_deps.install(\"atom-ide-javascript-js\", false);\n      // enable if disabled\n      deps.filter((p) => !atom.packages.isPackageLoaded(p)).forEach(p => {\n        atom.notifications.addInfo(`Enabling package ${p} that is needed for atom-ide-javascript`)\n        atom.packages.enablePackage(p)\n      })\n    });\n  }\n}\n\n/**\n * called by Atom when deactivating an extension\n */\nexport function deactivate() {\n  if (subscriptions) {\n    subscriptions.dispose();\n  }\n  subscriptions = null;\n}\n\n/**\n * called by IDE extensions to retrieve the service for registration\n * @return the current instance\n */\nexport function provideYourService() {}\n\nexport const config = {\n  // doSomething: {\n  //   title: \"title\",\n  //   description: \"config description\",\n  //   type: \"boolean\", // 'number', 'string'\n  //   default: true,\n  // },\n};\n","// This configures atom-typescript\nexport function setupTypeScript() {\n  // use atom-typescript for javascript\n  atom.config.set(\"atom-typescript.allowJS\", true)\n  // disable check files which slows down Atom\n  atom.config.set(\"atom-typescript.checkAllFilesOnSave\", false)\n  // activate atom-typescript\n  atom.commands.dispatch(atom.workspace.getElement(), \"typescript:activate\")\n}\n"],"names":["subscriptions","state","CompositeDisposable","async","deps","some","p","atom","packages","isPackageLoaded","Promise","then","atom_package_deps","install","filter","forEach","notifications","addInfo","enablePackage","package_deps","config","set","commands","dispatch","workspace","getElement","dispose"],"mappings":"gJAGA,IAAIA,mBAMG,SAAkBC,GAEvBD,EAAgB,IAAIE,sBAUtBC,uBAGQC,EAAQ,CACZ,gBACA,kBACA,gBACA,sBAEEA,EAAKC,KAAMC,IAAOC,KAAKC,SAASC,gBAAgBH,WAC5CI,kDAAO,8DAAqBC,KAAMC,IAEtCA,EAAkBC,QAAQ,0BAA0B,GAEpDT,EAAKU,OAAQR,IAAOC,KAAKC,SAASC,gBAAgBH,IAAIS,QAAQT,IAC5DC,KAAKS,cAAcC,QAAS,oBAAmBX,4CAC/CC,KAAKC,SAASU,cAAcZ,OAxBlCa,GAAeR,KAAK,KCVpBJ,KAAKa,OAAOC,IAAI,2BAA2B,GAE3Cd,KAAKa,OAAOC,IAAI,uCAAuC,GAEvDd,KAAKe,SAASC,SAAShB,KAAKiB,UAAUC,aAAc,yCDoDhC,sBAbf,WACDzB,GACFA,EAAc0B,UAEhB1B,EAAgB,iCAOX"}