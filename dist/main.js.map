{"version":3,"file":"main.js","sources":["../src/main.js","../src/typescript.js"],"sourcesContent":["import { CompositeDisposable } from \"atom\";\r\nimport {setupTypeScript} from \"./typescript.js\";\r\n\r\nlet subscriptions;\r\n\r\n/**\r\n * called by Atom when activating an extension\r\n * @param  {any} state the current state of atom\r\n */\r\nexport function activate(state) {\r\n  // Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable\r\n  subscriptions = new CompositeDisposable();\r\n\r\n  package_deps().then(() => {\r\n    setupTypeScript()\r\n  });\r\n}\r\n\r\n/**\r\n * install Atom package dependencies if not already loaded\r\n */\r\nasync function package_deps() {\r\n  // Add entries from package-deps here manually\r\n  // (to prevent loading atom-package-deps and package.json when the deps are already loaded)\r\n  const deps =  [\r\n    \"atom-ide-base\",\r\n    \"atom-typescript\",\r\n    \"linter-eslint\",\r\n    \"autocomplete-paths\",\r\n    \"javascript-drag-import\"\r\n  ];\r\n  if (deps.some((p) => !atom.packages.isPackageLoaded(p))) {\r\n    await import(\"atom-package-deps\").then((atom_package_deps) => {\r\n      // install if not installed\r\n      atom_package_deps.install(\"atom-ide-javascript-js\", false);\r\n      // enable if disabled\r\n      deps.filter((p) => !atom.packages.isPackageLoaded(p)).forEach(p => {\r\n        atom.notifications.addInfo(`Enabling package ${p} that is needed for atom-ide-javascript`)\r\n        atom.packages.enablePackage(p)\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * called by Atom when deactivating an extension\r\n */\r\nexport function deactivate() {\r\n  if (subscriptions) {\r\n    subscriptions.dispose();\r\n  }\r\n  subscriptions = null;\r\n}\r\n\r\n/**\r\n * called by IDE extensions to retrieve the service for registration\r\n * @return the current instance\r\n */\r\nexport function provideYourService() {}\r\n\r\nexport const config = {\r\n  // doSomething: {\r\n  //   title: \"title\",\r\n  //   description: \"config description\",\r\n  //   type: \"boolean\", // 'number', 'string'\r\n  //   default: true,\r\n  // },\r\n};\r\n","// This configures atom-typescript\r\nexport function setupTypeScript() {\r\n  // use atom-typescript for javascript\r\n  atom.config.set(\"atom-typescript.allowJS\", true)\r\n  // disable check files which slows down Atom\r\n  atom.config.set(\"atom-typescript.checkAllFilesOnSave\", false)\r\n  // activate atom-typescript\r\n  atom.commands.dispatch(atom.workspace.getElement(), \"typescript:activate\")\r\n}\r\n"],"names":["subscriptions","state","CompositeDisposable","async","deps","some","p","atom","packages","isPackageLoaded","Promise","then","atom_package_deps","install","filter","forEach","notifications","addInfo","enablePackage","package_deps","config","set","commands","dispatch","workspace","getElement","dispose"],"mappings":"gJAGA,IAAIA,mBAMG,SAAkBC,GAEvBD,EAAgB,IAAIE,sBAUtBC,uBAGQC,EAAQ,CACZ,gBACA,kBACA,gBACA,qBACA,0BAEEA,EAAKC,KAAMC,IAAOC,KAAKC,SAASC,gBAAgBH,WAC5CI,kDAAO,8DAAqBC,KAAMC,IAEtCA,EAAkBC,QAAQ,0BAA0B,GAEpDT,EAAKU,OAAQR,IAAOC,KAAKC,SAASC,gBAAgBH,IAAIS,QAAQT,IAC5DC,KAAKS,cAAcC,QAAS,oBAAmBX,4CAC/CC,KAAKC,SAASU,cAAcZ,OAzBlCa,GAAeR,KAAK,KCVpBJ,KAAKa,OAAOC,IAAI,2BAA2B,GAE3Cd,KAAKa,OAAOC,IAAI,uCAAuC,GAEvDd,KAAKe,SAASC,SAAShB,KAAKiB,UAAUC,aAAc,yCDqDhC,sBAbf,WACDzB,GACFA,EAAc0B,UAEhB1B,EAAgB,iCAOX"}